<?php

function fame_reg_block($op = 'list', $delta = 0, $edit = array()) {

    switch ($op){
        case 'list':
            $blocks[0] = array(
                'info' => t('Famelab: Registration Login Box')
            );
            return $blocks;
        break;

        case 'view':
             switch ($delta) {
                case 0:
                    global $user;
                    if ($user->uid == 0){
                        $title = 'Join Famelab';
                        $links[] = l('Sign In', 'user');
                        $links[] = l('Create Account', 'user/register');
                    }else{
                        $title = 'Your Account';
                        $links[] = l('Edit profile', 'user/' . $user->uid);
                        $links[] = l('Logout', 'logout');
                    }

                    $body = theme('item_list', $links);

                    $block = array(
                        'subject' => $title,
                        'content' => $body,
                    );
                break;
             }
             return $block;
        break;

    }
    
}


function fame_reg_menu(){

    $items['user/register'] = array(
        'title' => 'Create Account',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('fame_reg_create_account'),
        'access arguments' => array('access content'),
        'type' => MENU_LOCAL_TASK,
    );

    $items['user/register/complete/%'] = array(
        'title' => 'Registration Complete',
        'page callback' => 'fame_reg_create_account_complete',
        'page arguments' => array(3),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    return $items;

}

function fame_reg_create_account(){
    
    $tax_places = taxonomy_get_tree(1);
    foreach ($tax_places as $tax){
        $places[$tax->tid] = $tax->name;
    }
    
    
    $form = array();

    $form['intro'] = array(
        '#prefix' => '<p>',
        '#value' => '<strong>FameLab Alumni Connect is only open to all FameLab contestants who have competed in the semi-final or final of local, regional or international competitions.  If this describes you please sign up</strong></p><p>Please fill in your details below. When you have submitted the your details one of our administers will check and approve your account. <br/> Once access has been granted you will be able to complete your full profile.',
        '#suffix' => '</p>'
    );

    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => 'Title',
      '#required' => 'true'
    );

    $form['firstname'] = array(
      '#type' => 'textfield',
      '#title' => 'Firstname',
      '#required' => 'true'
    );

    $form['surname'] = array(
      '#type' => 'textfield',
      '#title' => 'Surname',
      '#required' => 'true'
    );
     $form['username'] = array(
      '#type' => 'textfield',
      '#title' => 'Desired username',
      '#required' => 'true'
    );
    $form['email'] = array(
      '#type' => 'textfield',
      '#title' => 'E-mail address',
      '#required' => 'true'
    );

    $form['email_confirm'] = array(
      '#type' => 'textfield',
      '#title' => 'Confirm e-mail address',
      '#required' => 'true'
    );

    $form['city'] = array(
      '#type' => 'textfield',
      '#title' => 'City',
      '#required' => 'true'
    );

    $form['country'] = array(
      '#type' => 'textfield',
      '#title' => 'Country',
      '#required' => 'true'
    );
    
    $form['field'] = array(
      '#type' => 'textfield',
      '#title' => 'Field',
      '#required' => 'true'
    );
    
    $form['place'] = array(
      '#type' => 'select',
      '#title' => 'Place',
      '#options' => $places,
      '#required' => 'true'
    );
    
    $form['class'] = array(
      '#type' => 'textfield',
      '#title' => 'Class of',
      '#required' => 'true',
      '#description' => 'e.g. 2009'
    );
    
    $form['bio'] = array(
      '#type' => 'textarea',
      '#title' => 'Short Bio',
      '#required' => 'true'
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Submit'
    );
    return $form;
}


function fame_reg_create_account_validate($form, $form_state){

    if($form_state['values']['email'] != $form_state['values']['email_confirm']){
        form_set_error('email', 'email addresses do not match!');
    }


    if (!valid_email_address($form_state['values']['email'])){
       form_set_error('email', 'the email address provided is not valid');
    }
}

function fame_reg_create_account_submit($form, $form_state){
    $roles = array();
    
    $roles[3] = 'alumni';

    $newUser = array(
        'name' =>  $form_state['values']['username'],
        'pass' => user_password(), // random password
        'mail' => $form_state['values']['email'],
        'status' => 0,
        'init' => $form_state['values']['email'],        
        'roles' => $roles
    );
    $account = user_save(null, $newUser);
    if (is_object($account)){

        $user_profile = new stdClass();
        $user_profile->type = 'alumni_profile';
        $user_profile->title = $account->name . "'s Profile";
        $user_profile->field_title[0]['value'] = $form_state['values']['title'];
        $user_profile->field_firstname[0]['value'] = $form_state['values']['firstname'];
        $user_profile->field_surname[0]['value'] = $form_state['values']['surname'];
        $user_profile->field_city[0]['value'] = $form_state['values']['city'];
        $user_profile->field_country[0]['value'] = $form_state['values']['country'];
        $user_profile->field_place[0]['tid'] = $form_state['values']['place'];
        $user_profile->field_speciality[0]['value'] = $form_state['values']['field'];
        $user_profile->body['value'] = $form_state['values']['bio'];
        $user_profile->field_year_of_graduation[0]['value'] = $form_state['values']['class'];
        
        $user_profile = node_prepare($user_profile);
        $user_profile->uid = $account->uid;
        $user_profile->name = $account->name;

        node_save($user_profile);

        drupal_goto('user/register/complete/' . $account->uid);
    }else{
        drupal_set_message('User registration has failed. Please contact famelab directly. (ERR/REG/1)');
    }

}

function fame_reg_create_account_complete($uid){
    $user = user_load($uid);
    if (!is_object($user)){
        drupal_set_message('User registration has failed. Please contact famelab directly. (ERR/REG/2)');
        drupal_goto('user/register');
    }

    $html = '<div id="content-wrapper">';
    $html .= '<p>' . 'Thank you for registering %firstname,' . '</p>';
    $html .= '<p>' . 'A site administrator will look at your application shortly and get back to you via e-mail as soon as possible.' . '</p>';
    $html .= '<p><strong>FameLab Web Team</strong></p>';
    $html .= '</div>';
   
    return t($html, array('%firstname' => $user->name));
}